{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `compiler_builtins`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `compiler_builtins`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":1662,"byte_end":1666,"line_start":44,"line_end":44,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use core::{","highlight_start":5,"highlight_end":9}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:44:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse core::{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41901,"byte_end":41905,"line_start":1295,"line_end":1295,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":22,"highlight_end":26}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1295:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            type Bytes = [u8; core::mem::size_of::<Self>()];\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":45921,"byte_end":45925,"line_start":1392,"line_end":1392,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":23,"highlight_end":27}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1392:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const RADIX: u32 = core::$t::RADIX;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":45970,"byte_end":45974,"line_start":1393,"line_end":1393,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":33,"highlight_end":37}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1393:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46020,"byte_end":46024,"line_start":1394,"line_end":1394,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":24,"highlight_end":28}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1394:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const DIGITS: u32 = core::$t::DIGITS;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46063,"byte_end":46067,"line_start":1395,"line_end":1395,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":26,"highlight_end":30}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1395:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const EPSILON: Self = core::$t::EPSILON;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46103,"byte_end":46107,"line_start":1396,"line_end":1396,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":22,"highlight_end":26}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1396:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MIN: Self = core::$t::MIN;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46148,"byte_end":46152,"line_start":1397,"line_end":1397,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":31,"highlight_end":35}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1397:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1397\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46193,"byte_end":46197,"line_start":1398,"line_end":1398,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":22,"highlight_end":26}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1398:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MAX: Self = core::$t::MAX;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46232,"byte_end":46236,"line_start":1399,"line_end":1399,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":25,"highlight_end":29}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1399:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MIN_EXP: i32 = core::$t::MIN_EXP;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46275,"byte_end":46279,"line_start":1400,"line_end":1400,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":25,"highlight_end":29}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1400:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MAX_EXP: i32 = core::$t::MAX_EXP;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46321,"byte_end":46325,"line_start":1401,"line_end":1401,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1401:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MIN_10_EXP: i32 = core::$t::MIN_10_EXP;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46370,"byte_end":46374,"line_start":1402,"line_end":1402,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1402:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const MAX_10_EXP: i32 = core::$t::MAX_10_EXP;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46413,"byte_end":46417,"line_start":1403,"line_end":1403,"column_start":22,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":22,"highlight_end":26}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1403:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const NAN: Self = core::$t::NAN;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46454,"byte_end":46458,"line_start":1404,"line_end":1404,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":27,"highlight_end":31}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1404:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const INFINITY: Self = core::$t::INFINITY;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46504,"byte_end":46508,"line_start":1405,"line_end":1405,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":31,"highlight_end":35}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1405:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const NEG_INFINITY: Self = core::$t::NEG_INFINITY;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46549,"byte_end":46553,"line_start":1407,"line_end":1407,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":21,"highlight_end":25}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1407:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const PI: Self = core::$t::consts::PI;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46598,"byte_end":46602,"line_start":1408,"line_end":1408,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1408:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46654,"byte_end":46658,"line_start":1409,"line_end":1409,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1409:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46710,"byte_end":46714,"line_start":1410,"line_end":1410,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1410:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46766,"byte_end":46770,"line_start":1411,"line_end":1411,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1411:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46822,"byte_end":46826,"line_start":1412,"line_end":1412,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1412:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46878,"byte_end":46882,"line_start":1413,"line_end":1413,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1413:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46934,"byte_end":46938,"line_start":1414,"line_end":1414,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":28,"highlight_end":32}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1414:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":46995,"byte_end":46999,"line_start":1415,"line_end":1415,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":33,"highlight_end":37}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1415:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47053,"byte_end":47057,"line_start":1416,"line_end":1416,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":25,"highlight_end":29}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1416:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const SQRT_2: Self = core::$t::consts::SQRT_2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47110,"byte_end":47114,"line_start":1417,"line_end":1417,"column_start":32,"column_end":36,"is_primary":true,"text":[{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":32,"highlight_end":36}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1417:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47162,"byte_end":47166,"line_start":1418,"line_end":1418,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":20,"highlight_end":24}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1418:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const E: Self = core::$t::consts::E;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47207,"byte_end":47211,"line_start":1419,"line_end":1419,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":25,"highlight_end":29}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1419:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const LOG2_E: Self = core::$t::consts::LOG2_E;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47258,"byte_end":47262,"line_start":1420,"line_end":1420,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":26,"highlight_end":30}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1420:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const LOG10_E: Self = core::$t::consts::LOG10_E;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47307,"byte_end":47311,"line_start":1421,"line_end":1421,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":23,"highlight_end":27}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1421:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const LN_2: Self = core::$t::consts::LN_2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"can't find crate for `core`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n\n## Common causes\n\n- The crate is not present at all. If using Cargo, add it to `[dependencies]`\n  in Cargo.toml.\n- The crate is present, but under a different name. If using Cargo, look for\n  `package = ` under `[dependencies]` in Cargo.toml.\n\n## Common causes for missing `std` or `core`\n\n- You are cross-compiling for a target which doesn't have `std` prepackaged.\n  Consider one of the following:\n  + Adding a pre-compiled version of std with `rustup target add`\n  + Building std from source with `cargo build -Z build-std`\n  + Using `#![no_std]` at the crate root, so you won't need `std` in the first\n    place.\n- You are developing the compiler itself and haven't built libstd from source.\n  You can usually build it with `x.py build library/std`. More information\n  about x.py is available in the [rustc-dev-guide].\n\n[rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html#building-the-compiler\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":47354,"byte_end":47358,"line_start":1422,"line_end":1422,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":24,"highlight_end":28}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the `wasm32-unknown-unknown` target may not be installed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider downloading the target with `rustup target add wasm32-unknown-unknown`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider building the standard library from source with `cargo build -Zbuild-std`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `core`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1422:24\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            const LN_10: Self = core::$t::consts::LN_10;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the `wasm32-unknown-unknown` target may not be installed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider downloading the target with `rustup target add wasm32-unknown-unknown`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider building the standard library from source with `cargo build -Zbuild-std`\u001b[0m\n\n"}
{"message":"cannot find trait `Sized` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2318,"byte_end":2323,"line_start":99,"line_end":99,"column_start":21,"column_end":26,"is_primary":true,"text":[{"text":"pub trait IsNumber: Sized","highlight_start":21,"highlight_end":26}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Sized` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:99:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub trait IsNumber: Sized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Send` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2327,"byte_end":2331,"line_start":100,"line_end":100,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ Send","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Send` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:100:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Send\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Sync` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2335,"byte_end":2339,"line_start":101,"line_end":101,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ Sync","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Sync` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:101:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Sync\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Unpin` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2343,"byte_end":2348,"line_start":102,"line_end":102,"column_start":4,"column_end":9,"is_primary":true,"text":[{"text":"\t+ Unpin","highlight_start":4,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Unpin` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:102:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Unpin\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Clone` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2352,"byte_end":2357,"line_start":103,"line_end":103,"column_start":4,"column_end":9,"is_primary":true,"text":[{"text":"\t+ Clone","highlight_start":4,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Clone` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:103:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Clone\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Copy` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2361,"byte_end":2365,"line_start":104,"line_end":104,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ Copy","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Copy` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:104:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Copy\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Default` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2369,"byte_end":2376,"line_start":105,"line_end":105,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ Default","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Default` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:105:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `FromStr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2380,"byte_end":2387,"line_start":106,"line_end":106,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ FromStr","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `FromStr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:106:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + FromStr\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `PartialEq` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2400,"byte_end":2409,"line_start":108,"line_end":108,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ PartialEq<Self>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `PartialEq` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:108:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + PartialEq<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `PartialOrd` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2419,"byte_end":2429,"line_start":109,"line_end":109,"column_start":4,"column_end":14,"is_primary":true,"text":[{"text":"\t+ PartialOrd<Self>","highlight_start":4,"highlight_end":14}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `PartialOrd` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:109:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + PartialOrd<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Debug` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2448,"byte_end":2453,"line_start":111,"line_end":111,"column_start":4,"column_end":9,"is_primary":true,"text":[{"text":"\t+ Debug","highlight_start":4,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Debug` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:111:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Debug\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Display` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2457,"byte_end":2464,"line_start":112,"line_end":112,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ Display","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Display` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:112:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Display\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Product` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2478,"byte_end":2485,"line_start":114,"line_end":114,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ Product<Self>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Product` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:114:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Product<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Product` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2503,"byte_end":2510,"line_start":115,"line_end":115,"column_start":12,"column_end":19,"is_primary":true,"text":[{"text":"\t+ for<'a> Product<&'a Self>","highlight_start":12,"highlight_end":19}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Product` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:115:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Product<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Sum` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2524,"byte_end":2527,"line_start":116,"line_end":116,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Sum<Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Sum` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:116:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Sum<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Sum` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2545,"byte_end":2548,"line_start":117,"line_end":117,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Sum<&'a Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Sum` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:117:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Sum<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Add` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2579,"byte_end":2582,"line_start":119,"line_end":119,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Add<Self, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Add` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:119:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Add<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Add` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":120,"line_end":120,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Add<&'a Self, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Add` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:120:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Add<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `AddAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2647,"byte_end":2656,"line_start":121,"line_end":121,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ AddAssign<Self>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `AddAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:121:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + AddAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `AddAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2674,"byte_end":2683,"line_start":122,"line_end":122,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> AddAssign<&'a Self>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `AddAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:122:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> AddAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Sub` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2697,"byte_end":2700,"line_start":123,"line_end":123,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Sub<Self, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Sub` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:123:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Sub<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Sub` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2733,"byte_end":2736,"line_start":124,"line_end":124,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Sub<&'a Self, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Sub` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:124:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Sub<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `SubAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2765,"byte_end":2774,"line_start":125,"line_end":125,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ SubAssign<Self>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `SubAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:125:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + SubAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `SubAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2792,"byte_end":2801,"line_start":126,"line_end":126,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> SubAssign<&'a Self>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `SubAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:126:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> SubAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Mul` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":127,"line_end":127,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Mul<Self, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Mul` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:127:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Mul<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Mul` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2851,"byte_end":2854,"line_start":128,"line_end":128,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Mul<&'a Self, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Mul` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:128:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Mul<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `MulAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2883,"byte_end":2892,"line_start":129,"line_end":129,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ MulAssign<Self>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `MulAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:129:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + MulAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `MulAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2910,"byte_end":2919,"line_start":130,"line_end":130,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> MulAssign<&'a Self>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `MulAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:130:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> MulAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Div` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2933,"byte_end":2936,"line_start":131,"line_end":131,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Div<Self, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Div` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:131:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Div<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Div` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":2969,"byte_end":2972,"line_start":132,"line_end":132,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Div<&'a Self, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Div` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:132:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Div<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `DivAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":3001,"byte_end":3010,"line_start":133,"line_end":133,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ DivAssign<Self>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `DivAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:133:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + DivAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `DivAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":3028,"byte_end":3037,"line_start":134,"line_end":134,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> DivAssign<&'a Self>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `DivAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:134:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> DivAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Rem` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":3051,"byte_end":3054,"line_start":135,"line_end":135,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Rem<Self, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Rem` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:135:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Rem<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Rem` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":3087,"byte_end":3090,"line_start":136,"line_end":136,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Rem<&'a Self, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Rem` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:136:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Rem<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `RemAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":3119,"byte_end":3128,"line_start":137,"line_end":137,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ RemAssign<Self>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `RemAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:137:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + RemAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `RemAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":3146,"byte_end":3155,"line_start":138,"line_end":138,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> RemAssign<&'a Self>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `RemAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:138:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> RemAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Hash` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4187,"byte_end":4191,"line_start":172,"line_end":172,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ Hash","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Hash` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:172:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Hash\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Eq` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4195,"byte_end":4197,"line_start":173,"line_end":173,"column_start":4,"column_end":6,"is_primary":true,"text":[{"text":"\t+ Eq","highlight_start":4,"highlight_end":6}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Eq` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:173:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Eq\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Ord` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4201,"byte_end":4204,"line_start":174,"line_end":174,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Ord","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Ord` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:174:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Ord\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Binary` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4208,"byte_end":4214,"line_start":175,"line_end":175,"column_start":4,"column_end":10,"is_primary":true,"text":[{"text":"\t+ Binary","highlight_start":4,"highlight_end":10}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Binary` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:175:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Binary\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `LowerHex` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4218,"byte_end":4226,"line_start":176,"line_end":176,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"\t+ LowerHex","highlight_start":4,"highlight_end":12}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `LowerHex` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:176:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + LowerHex\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `UpperHex` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4230,"byte_end":4238,"line_start":177,"line_end":177,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"\t+ UpperHex","highlight_start":4,"highlight_end":12}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `UpperHex` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:177:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + UpperHex\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Octal` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4242,"byte_end":4247,"line_start":178,"line_end":178,"column_start":4,"column_end":9,"is_primary":true,"text":[{"text":"\t+ Octal","highlight_start":4,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Octal` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:178:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Octal\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitAnd` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4251,"byte_end":4257,"line_start":179,"line_end":179,"column_start":4,"column_end":10,"is_primary":true,"text":[{"text":"\t+ BitAnd<Self, Output = Self>","highlight_start":4,"highlight_end":10}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitAnd` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:179:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + BitAnd<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitAnd` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4290,"byte_end":4296,"line_start":180,"line_end":180,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"\t+ for<'a> BitAnd<&'a Self, Output = Self>","highlight_start":12,"highlight_end":18}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitAnd` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:180:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> BitAnd<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitAndAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4325,"byte_end":4337,"line_start":181,"line_end":181,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"\t+ BitAndAssign<Self>","highlight_start":4,"highlight_end":16}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitAndAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:181:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + BitAndAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitAndAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4355,"byte_end":4367,"line_start":182,"line_end":182,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"\t+ for<'a> BitAndAssign<&'a Self>","highlight_start":12,"highlight_end":24}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitAndAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:182:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> BitAndAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitOr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4381,"byte_end":4386,"line_start":183,"line_end":183,"column_start":4,"column_end":9,"is_primary":true,"text":[{"text":"\t+ BitOr<Self, Output = Self>","highlight_start":4,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitOr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:183:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + BitOr<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitOr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4419,"byte_end":4424,"line_start":184,"line_end":184,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"\t+ for<'a> BitOr<&'a Self, Output = Self>","highlight_start":12,"highlight_end":17}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitOr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:184:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> BitOr<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitOrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4453,"byte_end":4464,"line_start":185,"line_end":185,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"\t+ BitOrAssign<Self>","highlight_start":4,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitOrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:185:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + BitOrAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitOrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4482,"byte_end":4493,"line_start":186,"line_end":186,"column_start":12,"column_end":23,"is_primary":true,"text":[{"text":"\t+ for<'a> BitOrAssign<&'a Self>","highlight_start":12,"highlight_end":23}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitOrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:186:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> BitOrAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitXor` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4507,"byte_end":4513,"line_start":187,"line_end":187,"column_start":4,"column_end":10,"is_primary":true,"text":[{"text":"\t+ BitXor<Self, Output = Self>","highlight_start":4,"highlight_end":10}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitXor` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:187:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + BitXor<Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitXor` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4546,"byte_end":4552,"line_start":188,"line_end":188,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"\t+ for<'a> BitXor<&'a Self, Output = Self>","highlight_start":12,"highlight_end":18}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitXor` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:188:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> BitXor<&'a Self, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitXorAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4581,"byte_end":4593,"line_start":189,"line_end":189,"column_start":4,"column_end":16,"is_primary":true,"text":[{"text":"\t+ BitXorAssign<Self>","highlight_start":4,"highlight_end":16}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitXorAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:189:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + BitXorAssign<Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `BitXorAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4611,"byte_end":4623,"line_start":190,"line_end":190,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"\t+ for<'a> BitXorAssign<&'a Self>","highlight_start":12,"highlight_end":24}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `BitXorAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:190:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> BitXorAssign<&'a Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Not` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4637,"byte_end":4640,"line_start":191,"line_end":191,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Not<Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Not` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:191:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Not<Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4659,"byte_end":4666,"line_start":192,"line_end":192,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<i8>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:192:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4674,"byte_end":4681,"line_start":193,"line_end":193,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<u8>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:193:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4689,"byte_end":4696,"line_start":194,"line_end":194,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<i16>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:194:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4705,"byte_end":4712,"line_start":195,"line_end":195,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<u16>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:195:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4721,"byte_end":4728,"line_start":196,"line_end":196,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<i32>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:196:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<i32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4737,"byte_end":4744,"line_start":197,"line_end":197,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<u32>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:197:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4753,"byte_end":4760,"line_start":198,"line_end":198,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<i64>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:198:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<i64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4769,"byte_end":4776,"line_start":199,"line_end":199,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<u64>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:199:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<u64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4785,"byte_end":4792,"line_start":200,"line_end":200,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<i128>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:200:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<i128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4802,"byte_end":4809,"line_start":201,"line_end":201,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<u128>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:201:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<u128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4819,"byte_end":4826,"line_start":202,"line_end":202,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<isize>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:202:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<isize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryFrom` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4837,"byte_end":4844,"line_start":203,"line_end":203,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryFrom<usize>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryFrom` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:203:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryFrom<usize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4855,"byte_end":4862,"line_start":204,"line_end":204,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<i8>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:204:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4870,"byte_end":4877,"line_start":205,"line_end":205,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<u8>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:205:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4885,"byte_end":4892,"line_start":206,"line_end":206,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<i16>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:206:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4901,"byte_end":4908,"line_start":207,"line_end":207,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<u16>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:207:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4917,"byte_end":4924,"line_start":208,"line_end":208,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<i32>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:208:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<i32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4933,"byte_end":4940,"line_start":209,"line_end":209,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<u32>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:209:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4949,"byte_end":4956,"line_start":210,"line_end":210,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<i64>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:210:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<i64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4965,"byte_end":4972,"line_start":211,"line_end":211,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<u64>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:211:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<u64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4981,"byte_end":4988,"line_start":212,"line_end":212,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<i128>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:212:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<i128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4998,"byte_end":5005,"line_start":213,"line_end":213,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<u128>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:213:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<u128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5015,"byte_end":5022,"line_start":214,"line_end":214,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<isize>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:214:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<isize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `TryInto` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5033,"byte_end":5040,"line_start":215,"line_end":215,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"\t+ TryInto<usize>","highlight_start":4,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `TryInto` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:215:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + TryInto<usize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5051,"byte_end":5054,"line_start":216,"line_end":216,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<i8, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:216:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<i8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5085,"byte_end":5088,"line_start":217,"line_end":217,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a i8, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:217:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a i8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5115,"byte_end":5124,"line_start":218,"line_end":218,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<i8>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:218:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5140,"byte_end":5149,"line_start":219,"line_end":219,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a i8>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:219:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5161,"byte_end":5164,"line_start":220,"line_end":220,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<i8, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:220:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<i8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5195,"byte_end":5198,"line_start":221,"line_end":221,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a i8, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:221:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a i8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5225,"byte_end":5234,"line_start":222,"line_end":222,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<i8>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:222:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5250,"byte_end":5259,"line_start":223,"line_end":223,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a i8>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:223:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5271,"byte_end":5274,"line_start":224,"line_end":224,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<u8, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:224:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<u8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5305,"byte_end":5308,"line_start":225,"line_end":225,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a u8, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:225:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a u8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5335,"byte_end":5344,"line_start":226,"line_end":226,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<u8>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:226:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5360,"byte_end":5369,"line_start":227,"line_end":227,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a u8>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:227:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5381,"byte_end":5384,"line_start":228,"line_end":228,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<u8, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:228:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<u8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5415,"byte_end":5418,"line_start":229,"line_end":229,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a u8, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:229:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a u8, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5445,"byte_end":5454,"line_start":230,"line_end":230,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<u8>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:230:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5470,"byte_end":5479,"line_start":231,"line_end":231,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a u8>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:231:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5491,"byte_end":5494,"line_start":232,"line_end":232,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<i16, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:232:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<i16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5526,"byte_end":5529,"line_start":233,"line_end":233,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a i16, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:233:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a i16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5557,"byte_end":5566,"line_start":234,"line_end":234,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<i16>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:234:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5583,"byte_end":5592,"line_start":235,"line_end":235,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a i16>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:235:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5605,"byte_end":5608,"line_start":236,"line_end":236,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<i16, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:236:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<i16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5640,"byte_end":5643,"line_start":237,"line_end":237,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a i16, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:237:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a i16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5671,"byte_end":5680,"line_start":238,"line_end":238,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<i16>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:238:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5697,"byte_end":5706,"line_start":239,"line_end":239,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a i16>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:239:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5719,"byte_end":5722,"line_start":240,"line_end":240,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<u16, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:240:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<u16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5754,"byte_end":5757,"line_start":241,"line_end":241,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a u16, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:241:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a u16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5785,"byte_end":5794,"line_start":242,"line_end":242,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<u16>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:242:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5811,"byte_end":5820,"line_start":243,"line_end":243,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a u16>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:243:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5833,"byte_end":5836,"line_start":244,"line_end":244,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<u16, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:244:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<u16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5868,"byte_end":5871,"line_start":245,"line_end":245,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a u16, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:245:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a u16, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5899,"byte_end":5908,"line_start":246,"line_end":246,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<u16>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:246:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5925,"byte_end":5934,"line_start":247,"line_end":247,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a u16>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:247:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5947,"byte_end":5950,"line_start":248,"line_end":248,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<i32, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:248:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<i32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":5982,"byte_end":5985,"line_start":249,"line_end":249,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a i32, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:249:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a i32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6013,"byte_end":6022,"line_start":250,"line_end":250,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<i32>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:250:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<i32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6039,"byte_end":6048,"line_start":251,"line_end":251,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a i32>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:251:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a i32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6061,"byte_end":6064,"line_start":252,"line_end":252,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<i32, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:252:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<i32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6096,"byte_end":6099,"line_start":253,"line_end":253,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a i32, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:253:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a i32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6127,"byte_end":6136,"line_start":254,"line_end":254,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<i32>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:254:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<i32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6153,"byte_end":6162,"line_start":255,"line_end":255,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a i32>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:255:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a i32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6175,"byte_end":6178,"line_start":256,"line_end":256,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<u32, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:256:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<u32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6210,"byte_end":6213,"line_start":257,"line_end":257,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a u32, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:257:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a u32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6241,"byte_end":6250,"line_start":258,"line_end":258,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<u32>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:258:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6267,"byte_end":6276,"line_start":259,"line_end":259,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a u32>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:259:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6289,"byte_end":6292,"line_start":260,"line_end":260,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<u32, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:260:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<u32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6324,"byte_end":6327,"line_start":261,"line_end":261,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a u32, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:261:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a u32, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6355,"byte_end":6364,"line_start":262,"line_end":262,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<u32>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:262:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6381,"byte_end":6390,"line_start":263,"line_end":263,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a u32>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:263:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a u32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6403,"byte_end":6406,"line_start":264,"line_end":264,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<i64, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:264:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<i64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6438,"byte_end":6441,"line_start":265,"line_end":265,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a i64, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:265:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a i64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6469,"byte_end":6478,"line_start":266,"line_end":266,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<i64>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:266:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<i64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6495,"byte_end":6504,"line_start":267,"line_end":267,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a i64>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:267:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a i64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6517,"byte_end":6520,"line_start":268,"line_end":268,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<i64, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:268:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<i64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6552,"byte_end":6555,"line_start":269,"line_end":269,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a i64, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:269:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a i64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6583,"byte_end":6592,"line_start":270,"line_end":270,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<i64>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:270:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<i64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6609,"byte_end":6618,"line_start":271,"line_end":271,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a i64>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:271:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a i64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6631,"byte_end":6634,"line_start":272,"line_end":272,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<u64, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:272:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<u64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6666,"byte_end":6669,"line_start":273,"line_end":273,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a u64, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:273:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a u64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6697,"byte_end":6706,"line_start":274,"line_end":274,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<u64>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:274:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<u64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6723,"byte_end":6732,"line_start":275,"line_end":275,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a u64>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:275:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a u64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6745,"byte_end":6748,"line_start":276,"line_end":276,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<u64, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:276:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<u64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6780,"byte_end":6783,"line_start":277,"line_end":277,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a u64, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:277:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a u64, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6811,"byte_end":6820,"line_start":278,"line_end":278,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<u64>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:278:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m278\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<u64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6837,"byte_end":6846,"line_start":279,"line_end":279,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a u64>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:279:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m279\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a u64>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6859,"byte_end":6862,"line_start":280,"line_end":280,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<i128, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:280:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m280\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<i128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6895,"byte_end":6898,"line_start":281,"line_end":281,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a i128, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:281:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m281\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a i128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6927,"byte_end":6936,"line_start":282,"line_end":282,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<i128>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:282:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<i128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6954,"byte_end":6963,"line_start":283,"line_end":283,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a i128>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:283:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a i128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":6977,"byte_end":6980,"line_start":284,"line_end":284,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<i128, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:284:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<i128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7013,"byte_end":7016,"line_start":285,"line_end":285,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a i128, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:285:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a i128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7045,"byte_end":7054,"line_start":286,"line_end":286,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<i128>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:286:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<i128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7072,"byte_end":7081,"line_start":287,"line_end":287,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a i128>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:287:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a i128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7095,"byte_end":7098,"line_start":288,"line_end":288,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<u128, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:288:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<u128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7131,"byte_end":7134,"line_start":289,"line_end":289,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a u128, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:289:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a u128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7163,"byte_end":7172,"line_start":290,"line_end":290,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<u128>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:290:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<u128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7190,"byte_end":7199,"line_start":291,"line_end":291,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a u128>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:291:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a u128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7213,"byte_end":7216,"line_start":292,"line_end":292,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<u128, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:292:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<u128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7249,"byte_end":7252,"line_start":293,"line_end":293,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a u128, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:293:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a u128, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7281,"byte_end":7290,"line_start":294,"line_end":294,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<u128>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:294:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<u128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7308,"byte_end":7317,"line_start":295,"line_end":295,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a u128>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:295:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a u128>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7331,"byte_end":7334,"line_start":296,"line_end":296,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<isize, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:296:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<isize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7368,"byte_end":7371,"line_start":297,"line_end":297,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a isize, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:297:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a isize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7401,"byte_end":7410,"line_start":298,"line_end":298,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<isize>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:298:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<isize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7429,"byte_end":7438,"line_start":299,"line_end":299,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a isize>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:299:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a isize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7453,"byte_end":7456,"line_start":300,"line_end":300,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<isize, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:300:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<isize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7490,"byte_end":7493,"line_start":301,"line_end":301,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a isize, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:301:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a isize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7523,"byte_end":7532,"line_start":302,"line_end":302,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<isize>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:302:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<isize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7551,"byte_end":7560,"line_start":303,"line_end":303,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a isize>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:303:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a isize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7575,"byte_end":7578,"line_start":304,"line_end":304,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shl<usize, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:304:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shl<usize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shl` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7612,"byte_end":7615,"line_start":305,"line_end":305,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shl<&'a usize, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shl` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:305:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shl<&'a usize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7645,"byte_end":7654,"line_start":306,"line_end":306,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShlAssign<usize>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:306:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShlAssign<usize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShlAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7673,"byte_end":7682,"line_start":307,"line_end":307,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShlAssign<&'a usize>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShlAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:307:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShlAssign<&'a usize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7697,"byte_end":7700,"line_start":308,"line_end":308,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Shr<usize, Output = Self>","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:308:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Shr<usize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Shr` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7734,"byte_end":7737,"line_start":309,"line_end":309,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"\t+ for<'a> Shr<&'a usize, Output = Self>","highlight_start":12,"highlight_end":15}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Shr` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:309:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> Shr<&'a usize, Output = Self>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7767,"byte_end":7776,"line_start":310,"line_end":310,"column_start":4,"column_end":13,"is_primary":true,"text":[{"text":"\t+ ShrAssign<usize>","highlight_start":4,"highlight_end":13}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:310:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + ShrAssign<usize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `ShrAssign` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":7795,"byte_end":7804,"line_start":311,"line_end":311,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"\t+ for<'a> ShrAssign<&'a usize>","highlight_start":12,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `ShrAssign` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:311:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + for<'a> ShrAssign<&'a usize>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Result` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":8671,"byte_end":8677,"line_start":341,"line_end":341,"column_start":46,"column_end":52,"is_primary":true,"text":[{"text":"\tfn from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>;","highlight_start":46,"highlight_end":52}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Result` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:341:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `ParseIntError` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":8684,"byte_end":8697,"line_start":341,"line_end":341,"column_start":59,"column_end":72,"is_primary":true,"text":[{"text":"\tfn from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>;","highlight_start":59,"highlight_end":72}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might be missing a type parameter","code":null,"level":"help","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":4172,"byte_end":4172,"line_start":170,"line_end":170,"column_start":20,"column_end":20,"is_primary":true,"text":[{"text":"pub trait IsInteger:","highlight_start":20,"highlight_end":20}],"label":null,"suggested_replacement":"<ParseIntError>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `ParseIntError` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:341:59\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub trait IsInteger:\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: you might be missing a type parameter: `<ParseIntError>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":10905,"byte_end":10911,"line_start":405,"line_end":405,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"\tfn checked_add(self, rhs: Self) -> Option<Self>;","highlight_start":37,"highlight_end":43}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:405:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_add(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":11057,"byte_end":11063,"line_start":409,"line_end":409,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"\tfn checked_sub(self, rhs: Self) -> Option<Self>;","highlight_start":37,"highlight_end":43}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:409:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m409\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_sub(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":11212,"byte_end":11218,"line_start":413,"line_end":413,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"\tfn checked_mul(self, rhs: Self) -> Option<Self>;","highlight_start":37,"highlight_end":43}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:413:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_mul(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":11390,"byte_end":11396,"line_start":417,"line_end":417,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"\tfn checked_div(self, rhs: Self) -> Option<Self>;","highlight_start":37,"highlight_end":43}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:417:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_div(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":11587,"byte_end":11593,"line_start":421,"line_end":421,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"\tfn checked_div_euclid(self, rhs: Self) -> Option<Self>;","highlight_start":44,"highlight_end":50}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:421:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_div_euclid(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":11766,"byte_end":11772,"line_start":425,"line_end":425,"column_start":37,"column_end":43,"is_primary":true,"text":[{"text":"\tfn checked_rem(self, rhs: Self) -> Option<Self>;","highlight_start":37,"highlight_end":43}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:425:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_rem(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":11964,"byte_end":11970,"line_start":429,"line_end":429,"column_start":44,"column_end":50,"is_primary":true,"text":[{"text":"\tfn checked_rem_euclid(self, rhs: Self) -> Option<Self>;","highlight_start":44,"highlight_end":50}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:429:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_rem_euclid(self, rhs: Self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":12145,"byte_end":12151,"line_start":434,"line_end":434,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"\tfn checked_neg(self) -> Option<Self>;","highlight_start":26,"highlight_end":32}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:434:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m434\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_neg(self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":12332,"byte_end":12338,"line_start":438,"line_end":438,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"\tfn checked_shl(self, rhs: u32) -> Option<Self>;","highlight_start":36,"highlight_end":42}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:438:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_shl(self, rhs: u32) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":12520,"byte_end":12526,"line_start":442,"line_end":442,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"\tfn checked_shr(self, rhs: u32) -> Option<Self>;","highlight_start":36,"highlight_end":42}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:442:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_shr(self, rhs: u32) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":12669,"byte_end":12675,"line_start":446,"line_end":446,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"\tfn checked_pow(self, rhs: u32) -> Option<Self>;","highlight_start":36,"highlight_end":42}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:446:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_pow(self, rhs: u32) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Neg` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":24531,"byte_end":24534,"line_start":744,"line_end":744,"column_start":33,"column_end":36,"is_primary":true,"text":[{"text":"pub trait IsSigned: IsInteger + Neg {","highlight_start":33,"highlight_end":36}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Neg` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:744:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m744\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub trait IsSigned: IsInteger + Neg {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":24654,"byte_end":24660,"line_start":747,"line_end":747,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"\tfn checked_abs(self) -> Option<Self>;","highlight_start":26,"highlight_end":32}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:747:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m747\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_abs(self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27070,"byte_end":27076,"line_start":807,"line_end":807,"column_start":40,"column_end":46,"is_primary":true,"text":[{"text":"\tfn checked_next_power_of_two(self) -> Option<Self>;","highlight_start":40,"highlight_end":46}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:807:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m807\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn checked_next_power_of_two(self) -> Option<Self>;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `LowerExp` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27171,"byte_end":27179,"line_start":813,"line_end":813,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"\t+ LowerExp","highlight_start":4,"highlight_end":12}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `LowerExp` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:813:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m813\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + LowerExp\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `UpperExp` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27183,"byte_end":27191,"line_start":814,"line_end":814,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"\t+ UpperExp","highlight_start":4,"highlight_end":12}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `UpperExp` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:814:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m814\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + UpperExp\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `Neg` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27195,"byte_end":27198,"line_start":815,"line_end":815,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"\t+ Neg","highlight_start":4,"highlight_end":7}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `Neg` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:815:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m815\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + Neg\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `From` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27202,"byte_end":27206,"line_start":816,"line_end":816,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ From<f32>","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `From` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:816:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m816\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + From<f32>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `From` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27215,"byte_end":27219,"line_start":817,"line_end":817,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ From<i8>","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `From` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:817:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m817\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + From<i8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `From` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27227,"byte_end":27231,"line_start":818,"line_end":818,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ From<i16>","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `From` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:818:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + From<i16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `From` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27240,"byte_end":27244,"line_start":819,"line_end":819,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ From<u8>","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `From` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:819:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m819\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + From<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find trait `From` in this scope","code":{"code":"E0405","explanation":"The code refers to a trait that is not in scope.\n\nErroneous code example:\n\n```compile_fail,E0405\nstruct Foo;\n\nimpl SomeTrait for Foo {} // error: trait `SomeTrait` is not in scope\n```\n\nPlease verify that the name of the trait wasn't misspelled and ensure that it\nwas imported. Example:\n\n```\n# #[cfg(for_demonstration_only)]\n// solution 1:\nuse some_file::SomeTrait;\n\n// solution 2:\ntrait SomeTrait {\n    // some functions\n}\n\nstruct Foo;\n\nimpl SomeTrait for Foo { // ok!\n    // implements functions\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":27252,"byte_end":27256,"line_start":820,"line_end":820,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"\t+ From<u16>","highlight_start":4,"highlight_end":8}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0405]\u001b[0m\u001b[0m\u001b[1m: cannot find trait `From` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:820:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    + From<u16>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `FpCategory` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":36269,"byte_end":36279,"line_start":1143,"line_end":1143,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"\tfn classify(self) -> FpCategory;","highlight_start":23,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FpCategory` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1143:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn classify(self) -> FpCategory;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find type `Result` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":42526,"byte_end":42532,"line_start":1313,"line_end":1313,"column_start":51,"column_end":57,"is_primary":true,"text":[{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":51,"highlight_end":57}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Result` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1313:51\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `ParseIntError` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":42539,"byte_end":42552,"line_start":1313,"line_end":1313,"column_start":64,"column_end":77,"is_primary":true,"text":[{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":64,"highlight_end":77}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `ParseIntError` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1313:64\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43113,"byte_end":43119,"line_start":1328,"line_end":1328,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":42,"highlight_end":48}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1328:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_add(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43169,"byte_end":43175,"line_start":1329,"line_end":1329,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":42,"highlight_end":48}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1329:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_sub(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43225,"byte_end":43231,"line_start":1330,"line_end":1330,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":42,"highlight_end":48}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1330:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_mul(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43281,"byte_end":43287,"line_start":1331,"line_end":1331,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":42,"highlight_end":48}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1331:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_div(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43344,"byte_end":43350,"line_start":1332,"line_end":1332,"column_start":49,"column_end":55,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":49,"highlight_end":55}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1332:49\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_div_euclid(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43400,"byte_end":43406,"line_start":1333,"line_end":1333,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":42,"highlight_end":48}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1333:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_rem(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43463,"byte_end":43469,"line_start":1334,"line_end":1334,"column_start":49,"column_end":55,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":49,"highlight_end":55}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1334:49\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43508,"byte_end":43514,"line_start":1335,"line_end":1335,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":31,"highlight_end":37}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1335:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_neg(self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43563,"byte_end":43569,"line_start":1336,"line_end":1336,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":41,"highlight_end":47}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1336:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_shl(self, rhs: u32) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43618,"byte_end":43624,"line_start":1337,"line_end":1337,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":41,"highlight_end":47}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1337:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_shr(self, rhs: u32) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":43673,"byte_end":43679,"line_start":1338,"line_end":1338,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":41,"highlight_end":47}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49498,"byte_end":49584,"line_start":1485,"line_end":1485,"column_start":1,"column_end":87,"is_primary":false,"text":[{"text":"impl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1338:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_pow(self, rhs: u32) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsInteger => i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":45331,"byte_end":45337,"line_start":1372,"line_end":1372,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":31,"highlight_end":37}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49586,"byte_end":49639,"line_start":1486,"line_end":1486,"column_start":1,"column_end":54,"is_primary":false,"text":[{"text":"impl_for!(IsSigned => i8, i16, i32, i64, i128, isize);","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1372:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_abs(self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1486\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsSigned => i8, i16, i32, i64, i128, isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `Option` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":45778,"byte_end":45784,"line_start":1385,"line_end":1385,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":45,"highlight_end":51}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49641,"byte_end":49696,"line_start":1487,"line_end":1487,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"impl_for!(IsUnsigned => u8, u16, u32, u64, u128, usize);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Option` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1385:45\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(checked_next_power_of_two(self) -> Option<Self>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsUnsigned => u8, u16, u32, u64, u128, usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find type `FpCategory` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":48945,"byte_end":48955,"line_start":1467,"line_end":1467,"column_start":28,"column_end":38,"is_primary":true,"text":[{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":28,"highlight_end":38}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":49698,"byte_end":49740,"line_start":1488,"line_end":1488,"column_start":1,"column_end":43,"is_primary":false,"text":[{"text":"impl_for!(IsFloat => f32 | u32, f64 | u64);","highlight_start":1,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_for!","def_site_span":{"file_name":"/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs","byte_start":41789,"byte_end":49399,"line_start":1292,"line_end":1482,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_for {","highlight_start":1,"highlight_end":24},{"text":"\t( IsNumber => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsNumber for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\ttype Bytes = [u8; core::mem::size_of::<Self>()];","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(to_be_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_le_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(to_ne_bytes(self) -> Self::Bytes);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tfunc!(from_be_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_le_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t\tfunc!(from_ne_bytes(bytes: Self::Bytes) -> Self);","highlight_start":1,"highlight_end":53},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsInteger => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl IsInteger for $t {","highlight_start":1,"highlight_end":26},{"text":"\t\t\tconst ZERO: Self = 0;","highlight_start":1,"highlight_end":25},{"text":"\t\t\tconst MIN: Self = <Self>::min_value();","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst MAX: Self = <Self>::max_value();","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(min_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(max_value() -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(from_str_radix(src: &str, radix: u32) -> Result<Self, ParseIntError>);","highlight_start":1,"highlight_end":80},{"text":"\t\t\tfunc!(count_ones(self) -> u32);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(count_zeros(self) -> u32);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(leading_zeros(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(trailing_zeros(self) -> u32);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(leading_ones(self) -> u32);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(trailing_ones(self) -> u32);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(rotate_left(self, n: u32) -> Self);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(rotate_right(self, n: u32) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t\tfunc!(swap_bytes(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(reverse_bits(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_be(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(from_le(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tfunc!(to_be(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_le(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(checked_add(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_sub(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_mul(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_div_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_rem(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(checked_rem_euclid(self, rhs: Self) -> Option<Self>);","highlight_start":1,"highlight_end":63},{"text":"\t\t\tfunc!(checked_neg(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(checked_shl(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_shr(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(checked_pow(self, rhs: u32) -> Option<Self>);","highlight_start":1,"highlight_end":55},{"text":"\t\t\tfunc!(saturating_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":51},{"text":"\t\t\tfunc!(saturating_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tfunc!(wrapping_add(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_sub(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_mul(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_rem(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(wrapping_rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":56},{"text":"\t\t\tfunc!(wrapping_neg(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(wrapping_shl(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_shr(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(wrapping_pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":48},{"text":"\t\t\tfunc!(overflowing_add(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_sub(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_mul(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_div_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_rem(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":60},{"text":"\t\t\tfunc!(overflowing_rem_euclid(self, rhs: Self) -> (Self, bool));","highlight_start":1,"highlight_end":67},{"text":"\t\t\tfunc!(overflowing_neg(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(overflowing_shl(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_shr(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(overflowing_pow(self, rhs: u32) -> (Self, bool));","highlight_start":1,"highlight_end":59},{"text":"\t\t\tfunc!(pow(self, rhs: u32) -> Self);","highlight_start":1,"highlight_end":39},{"text":"\t\t\tfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsSigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":42},{"text":"\t\timpl IsSigned for $t {","highlight_start":1,"highlight_end":25},{"text":"\t\t\tfunc!(checked_abs(self) -> Option<Self>);","highlight_start":1,"highlight_end":45},{"text":"\t\t\tfunc!(wrapping_abs(self) -> Self);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(overflowing_abs(self) -> (Self, bool));","highlight_start":1,"highlight_end":49},{"text":"\t\t\tfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":29},{"text":"\t\t\tfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_positive(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_negative(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsUnsigned => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":44},{"text":"\t\timpl IsUnsigned for $t {","highlight_start":1,"highlight_end":27},{"text":"\t\t\tfunc!(is_power_of_two(self) -> bool);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tfunc!(next_power_of_two(self) -> Self);","highlight_start":1,"highlight_end":43},{"text":"\t\t\tfunc!(checked_next_power_of_two(self) -> Option<Self>);","highlight_start":1,"highlight_end":59},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( IsFloat => $($t:ident | $u:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":52},{"text":"\t\timpl IsFloat for $t {","highlight_start":1,"highlight_end":24},{"text":"\t\t\ttype Raw = $u;","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst RADIX: u32 = core::$t::RADIX;","highlight_start":1,"highlight_end":39},{"text":"\t\t\tconst MANTISSA_DIGITS: u32 = core::$t::MANTISSA_DIGITS;","highlight_start":1,"highlight_end":59},{"text":"\t\t\tconst DIGITS: u32 = core::$t::DIGITS;","highlight_start":1,"highlight_end":41},{"text":"\t\t\tconst EPSILON: Self = core::$t::EPSILON;","highlight_start":1,"highlight_end":44},{"text":"\t\t\tconst MIN: Self = core::$t::MIN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_POSITIVE: Self = core::$t::MIN_POSITIVE;","highlight_start":1,"highlight_end":54},{"text":"\t\t\tconst MAX: Self = core::$t::MAX;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst MIN_EXP: i32 = core::$t::MIN_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MAX_EXP: i32 = core::$t::MAX_EXP;","highlight_start":1,"highlight_end":43},{"text":"\t\t\tconst MIN_10_EXP: i32 = core::$t::MIN_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst MAX_10_EXP: i32 = core::$t::MAX_10_EXP;","highlight_start":1,"highlight_end":49},{"text":"\t\t\tconst NAN: Self = core::$t::NAN;","highlight_start":1,"highlight_end":36},{"text":"\t\t\tconst INFINITY: Self = core::$t::INFINITY;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst NEG_INFINITY: Self = core::$t::NEG_INFINITY;","highlight_start":1,"highlight_end":54},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tconst PI: Self = core::$t::consts::PI;","highlight_start":1,"highlight_end":42},{"text":"\t\t\tconst FRAC_PI_2: Self = core::$t::consts::FRAC_PI_2;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_3: Self = core::$t::consts::FRAC_PI_3;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_4: Self = core::$t::consts::FRAC_PI_4;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_6: Self = core::$t::consts::FRAC_PI_6;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_PI_8: Self = core::$t::consts::FRAC_PI_8;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_1_PI: Self = core::$t::consts::FRAC_1_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_PI: Self = core::$t::consts::FRAC_2_PI;","highlight_start":1,"highlight_end":56},{"text":"\t\t\tconst FRAC_2_SQRT_PI: Self = core::$t::consts::FRAC_2_SQRT_PI;","highlight_start":1,"highlight_end":66},{"text":"\t\t\tconst SQRT_2: Self = core::$t::consts::SQRT_2;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst FRAC_1_SQRT_2: Self = core::$t::consts::FRAC_1_SQRT_2;","highlight_start":1,"highlight_end":64},{"text":"\t\t\tconst E: Self = core::$t::consts::E;","highlight_start":1,"highlight_end":40},{"text":"\t\t\tconst LOG2_E: Self = core::$t::consts::LOG2_E;","highlight_start":1,"highlight_end":50},{"text":"\t\t\tconst LOG10_E: Self = core::$t::consts::LOG10_E;","highlight_start":1,"highlight_end":52},{"text":"\t\t\tconst LN_2: Self = core::$t::consts::LN_2;","highlight_start":1,"highlight_end":46},{"text":"\t\t\tconst LN_10: Self = core::$t::consts::LN_10;","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tstdfunc!(floor(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(ceil(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(round(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(trunc(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(fract(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(abs(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(signum(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(copysign(self, sign: Self) -> Self);","highlight_start":1,"highlight_end":49},{"text":"\t\t\tstdfunc!(mul_add(self, a: Self, b: Self) -> Self);","highlight_start":1,"highlight_end":54},{"text":"\t\t\tstdfunc!(div_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(rem_euclid(self, rhs: Self) -> Self);","highlight_start":1,"highlight_end":50},{"text":"\t\t\tstdfunc!(powi(self, n: i32) -> Self);","highlight_start":1,"highlight_end":41},{"text":"\t\t\tstdfunc!(powf(self, n: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tstdfunc!(sqrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(exp(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(exp2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(ln(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tstdfunc!(log(self, base: Self) -> Self);","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(log2(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(log10(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(cbrt(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(hypot(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(cos(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(tan(self) -> Self);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tstdfunc!(asin(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(acos(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(atan2(self, other: Self) -> Self);","highlight_start":1,"highlight_end":47},{"text":"\t\t\tstdfunc!(sin_cos(self) -> (Self, Self));","highlight_start":1,"highlight_end":44},{"text":"\t\t\tstdfunc!(exp_m1(self) -> Self);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tstdfunc!(ln_1p(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(sinh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(cosh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(tanh(self) -> Self);","highlight_start":1,"highlight_end":33},{"text":"\t\t\tstdfunc!(asinh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(acosh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"\t\t\tstdfunc!(atanh(self) -> Self);","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\tfunc!(is_nan(self) -> bool);","highlight_start":1,"highlight_end":32},{"text":"\t\t\tfunc!(is_infinite(self) -> bool);","highlight_start":1,"highlight_end":37},{"text":"\t\t\tfunc!(is_finite(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(is_normal(self) -> bool);","highlight_start":1,"highlight_end":35},{"text":"\t\t\tfunc!(classify(self) -> FpCategory);","highlight_start":1,"highlight_end":40},{"text":"\t\t\tfunc!(is_sign_positive(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(is_sign_negative(self) -> bool);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(recip(self) -> Self);","highlight_start":1,"highlight_end":31},{"text":"\t\t\tfunc!(to_degrees(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(to_radians(self) -> Self);","highlight_start":1,"highlight_end":36},{"text":"\t\t\tfunc!(max(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(min(self, other: Self) -> Self);","highlight_start":1,"highlight_end":42},{"text":"\t\t\tfunc!(to_bits(self) -> Self::Raw);","highlight_start":1,"highlight_end":38},{"text":"\t\t\tfunc!(from_bits(bits: Self::Raw) -> Self);","highlight_start":1,"highlight_end":46},{"text":"\t\t}","highlight_start":1,"highlight_end":4},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"\t( $which:ty => $($t:ty),+ $(,)? ) => { $(","highlight_start":1,"highlight_end":43},{"text":"\t\timpl $which for $t {}","highlight_start":1,"highlight_end":24},{"text":"\t)+ };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `FpCategory` in this scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/chef/.cargo/registry/src/github.com-1ecc6299db9ec823/funty-1.1.0/src/lib.rs:1467:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1467\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            func!(classify(self) -> FpCategory);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl_for!(IsFloat => f32 | u32, f64 | u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 251 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 251 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0405, E0412, E0463.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0405, E0412, E0463.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0405`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0405`.\u001b[0m\n"}
